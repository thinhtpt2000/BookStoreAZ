@using BookStoreAZ.MVC.Models
@model BookStoreAZ.MVC.Models.BookModel

@{
    Layout = "~/Views/Layout/_AdminLayout.cshtml";
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@ViewBag.Title</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="form-row">
            <div class="col-md-6">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label ml-3" })
                    <span class="text-danger">*</span>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @maxLength = 256, @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label ml-3" })
                    <span class="text-danger">*</span>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @require = "required", @step = 1000, @min = 1000 } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Promotion, htmlAttributes: new { @class = "control-label ml-3" })
                    @Html.CheckBox("isActivePromotion", false)
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Promotion, new { htmlAttributes = new { @class = "form-control", @step = 1000, @min = 0 } })
                        @Html.ValidationMessageFor(model => model.Promotion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label ml-3" })
                    <span class="text-danger">*</span>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @min = 0, @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label ml-3" })
                <span class="text-danger">*</span>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 12, @required = "required", @maxLength = 500 })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-6">
                <div class="form-group  col-md-12">
                    @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label ml-3" })
                    <span class="text-danger">*</span>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CategoryID, new SelectList(Model.Categories, "ID", "Name", Model.CategoryID), new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group  col-md-12">
                    @Html.LabelFor(model => model.AuthorID, htmlAttributes: new { @class = "control-label ml-3" })
                    <span class="text-danger">*</span>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.AuthorID, new SelectList(Model.Authors, "ID", "Name", Model.AuthorID), new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.AuthorID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group  col-md-12">
                    @Html.LabelFor(model => model.PublisherID, htmlAttributes: new { @class = "control-label ml-3" })
                    <span class="text-danger">*</span>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.PublisherID, new SelectList(Model.Publishers, "ID", "Name", Model.PublisherID), new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.PublisherID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label ml-3" })
                    @Html.CheckBoxFor(model => model.Status, new { @class = "form-check-input ml-3" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group custom-file col-md-12 mt-4">
                    <input id="fileInput"
                           type="file"
                           class='form-control-file'
                           accept="image/*"
                           style="display:none">
                    <a href="#" id="fileSelect">Select new image (.png, .jpg or .jpeg) - Size less than 2MB</a>
                </div>
                <div class="form-group col-md-12">
                    @Html.HiddenFor(model => model.Image)
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
                <div id="previewImageContainer" class="col-md-6">
                    <div id="progress" class="progress">
                        <div id="progress-bar" class="progress-bar progress-bar-striped bg-success" role="progressbar"></div>
                    </div>
                    <div id="previewImage" class="d-flex justify-content-center align-items-center mt-3">
                        <img src="@Model.Image" width="150" />
                    </div>
                    <a id="deleteImage" href="#" class="d-flex justify-content-center align-items-center text-danger">Delete image</a>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10 mx-auto text-center">
                <button type="submit" class="btn btn-primary col-md-4">Save</button>
            </div>
        </div>
    </div>
}

<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script src="~/Content/js/upload-image.js"></script>
<script>
    $('#isActivePromotion').on('click', function (event) {
        if ($('#isActivePromotion').is(':checked')) {
            $("#Promotion").show();
        } else {
            $("#Promotion").hide();
            $("#Promotion").val(0);
        }
    });
    $(document).ready(function () {
        if ($("#Promotion").val() === '0') {
            $("#Promotion").hide();
            $('#isActivePromotion').prop('checked', false);
        }
        else {
            $("#Promotion").show();
            $('#isActivePromotion').prop('checked', true);
        }
    });
</script>